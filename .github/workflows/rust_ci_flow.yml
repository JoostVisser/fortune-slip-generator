name: Rust CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: INFO

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@v2
      - uses: ./.github/actions/install_inkscape
      - run: inkscape --help
      - name: Install LLVM Cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Run tests
        continue-on-error: true
        run: >
          cargo llvm-cov nextest
          --no-fail-fast
          --verbose
          --profile ci
          --codecov
          --output-path codecov.json
      - name: Upload coverage to Codecov
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov.json
          fail_ci_if_error: true
      - name: Build executable
        run: cargo build --verbose
      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: dev-build
          path: target/debug/fortune_generator*

  fmt:
    name: Style checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - uses: actions/setup-node@v3
      - run: npm install -g jscpd
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all -- -D warnings
      - run: npx jscpd src
      - run: cargo run --package script_utils --bin script_utils --quiet >> $GITHUB_ENV
      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 4683758f6258e38bbe3169e5b315fdcc
          filename: jscpd-badge.json
          label: "Copy-Paste"
          minColorRange: 0
          maxColorRange: 20
          invertColorRange: true
          message: ${{ env.DUPL }}%
          valColorRange: ${{ env.DUPL }}

  upload_artifacts:
    name: Upload artifacts
    runs-on: ubuntu-latest
    needs: [fmt, test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: development-build
      - run: mkdir -p release/linux
      - run: mkdir -p release/windows
      - run: cp target/debug/fortune_generator* release/linux
      - run: cp target/debug/fortune_generator* release/windows
      - run: cp -r data/fortune_data/* release/linux
      - run: cp -r data/fortune_data/* release/windows
      - run: tar -czf release/linux.tar.gz release/linux
      - run: zip -r release/windows.zip release/windows
      - uses: actions/upload-artifact@v2
        with:
          name: dev-build
          path: data/fortune_data/*
      - uses: actions/upload-artifact@v2
        with:
          name: dev-build-linux
          path: release/linux.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: dev-build-windows
          path: release/windows.zip



  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [upload_artifacts]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --release
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.ref }}
          path: target/release/fortune_generator
