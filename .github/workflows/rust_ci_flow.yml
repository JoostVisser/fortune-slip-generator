name: Rust CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: INFO

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
      fail-fast: false
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@v2
      - uses: ./.github/actions/install_inkscape
      - run: inkscape --help
      - name: Install LLVM Cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - run: mkdir test_output
      - name: Run tests
        continue-on-error: true
        run: >
          cargo llvm-cov nextest run
          --no-fail-fast
          --verbose
          --profile ci
          --cobertura
          --output-path cobertura.xml
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          indicators: true
          output: both
      - name: Test Report
        uses: dorny/test-reporter@v1
        with:
          name: Unit-tests
          path: target/nextest/ci/junit.xml
          reporter: jest-junit

  fmt:
    name: Style checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all -- -D warnings

  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [test, fmt]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --release
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.ref }}
          path: target/release/fortune_generator
